import{_ as s,o as n,c as a,b as l}from"./app-3s01Ete_.js";const p={},o=l(`<h1 id="_7-36-复数四则运算" tabindex="-1"><a class="header-anchor" href="#_7-36-复数四则运算"><span>7-36 复数四则运算</span></a></h1><p>本题要求编写程序，计算2个复数的和、差、积、商。</p><h2 id="输入格式" tabindex="-1"><a class="header-anchor" href="#输入格式"><span>输入格式</span></a></h2><p>输入在一行中按照<code>a1 b1 a2 b2</code>的格式给出2个复数C1=<code>a1+b1i</code>和C2=<code>a2+b2i</code>的实部和虚部。题目保证C2不为0。</p><h2 id="输出格式" tabindex="-1"><a class="header-anchor" href="#输出格式"><span>输出格式</span></a></h2><p>分别在4行中按照<code>(a1+b1i) 运算符 (a2+b2i) = 结果</code>的格式顺序输出2个复数的和、差、积、商，数字精确到小数点后1位。如果结果的实部或者虚部为0，则不输出。如果结果为0，则输出0.0。</p><h2 id="输入样例1" tabindex="-1"><a class="header-anchor" href="#输入样例1"><span>输入样例1</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">3.08</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">2.04</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">5.06</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="输出样例1" tabindex="-1"><a class="header-anchor" href="#输出样例1"><span>输出样例1</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">2.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">3.1i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">2.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">5.1i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">8.1i</span></span>
<span class="line"><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">2.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">3.1i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">2.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">5.1i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">4.0</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9;">2.0i</span></span>
<span class="line"><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">2.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">3.1i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">2.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">5.1i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">19.7</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">3.8i</span></span>
<span class="line"><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">2.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">3.1i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">/</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">2.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">5.1i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0.4</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9;">0.6i</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="输入样例2" tabindex="-1"><a class="header-anchor" href="#输入样例2"><span>输入样例2</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1.01</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="输出样例2" tabindex="-1"><a class="header-anchor" href="#输出样例2"><span>输出样例2</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">1.0i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1.0</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9;">1.0i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0.0</span></span>
<span class="line"><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">1.0i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1.0</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9;">1.0i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">2.0i</span></span>
<span class="line"><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">1.0i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1.0</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9;">1.0i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9;">2.0i</span></span>
<span class="line"><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1.0</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">1.0i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">/</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1.0</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9;">1.0i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分析与答案" tabindex="-1"><a class="header-anchor" href="#分析与答案"><span>分析与答案</span></a></h2><p>其实也是考数学：</p><ol><li>复数加法：实部与实部相加，虚部与虚部相加，若实部为0，不输出，此时若虚部也为0，输出0.0，否则输出虚部（带i）；若实部不为零，虚部为0，输出实部；</li><li>复数减法：与加法原理一致；</li><li>复数乘法：<code>(a1+b1i)*(a2+b2i)=a1a2-b1b2+(a1b2+a2b1)i</code>；</li><li>复数除法：<code>(a1+b1i)/(a2+b2i)=((a1+b1i)(a2-b2i))/((a2+b2i)(a2-b2i))=(a1a2+b1b2+(b1a2-b2a1)i)/(a2^2+b2^2)</code></li></ol><p>输出时需要考虑两个问题：</p><ol><li>虚部的符号问题：如果虚部为正那就没有问题，如果虚部为负那就有可能出现<code>+-5.1i</code>这样的输出，所以如果虚部为负，需要将输出的符号改为减号，再将虚部取反输出。</li><li>保留小数问题：程序使用<code>double</code>型来储存数据，理论上讲，保留小数位输出时系统会按照四舍五入的方式进行。但实际上由于浮点型的精度问题，这样的四舍五入有时会变得很奇怪（比如3.15四舍五入为3.2，但可能实际储存的是3.1499999……，此时四舍五入就变成了3.1），程序引入了<code>math.h</code>中的<code>round</code>函数对浮点数进行四舍五入。但<code>round</code>函数只能将输入四舍五入到最近的整数，所以实际上传入的数字是先将小数点向右移动一位，再将结果小数点向左移动一位。</li></ol><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#8FBCBB;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">stdio.h</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#8FBCBB;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">math.h</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">res_output</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">res_real</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">res_img</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#ECEFF4;">(){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> a1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">b1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">scanf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%lf %lf %lf %lf</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9FF;">a1</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9FF;">b1</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> res_real </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">res_img </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> add_1 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">+</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> add_2 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">+</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> img_1 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> b1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">img_2 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> b2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">b1</span><span style="color:#81A1C1;">&lt;</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      add_1 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">-</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      img_1 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;">img_1</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#81A1C1;">&lt;</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      add_2 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">-</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      img_2 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;">img_2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#ECEFF4;">   </span><span style="color:#616E88;">//add</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">(%.1f%c%.1fi) + (%.1f%c%.1fi) = </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">a1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">add_1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">img_1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">add_2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">img_2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_real </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> a1</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_img </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> b1</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">res_output</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_real</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">res_img</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">   </span><span style="color:#616E88;">//end of add</span></span>
<span class="line"><span style="color:#ECEFF4;">   </span><span style="color:#616E88;">//subtract</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">(%.1f%c%.1fi) - (%.1f%c%.1fi) = </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">a1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">add_1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">img_1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">add_2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">img_2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_real </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> a1</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_img </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> b1</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">res_output</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_real</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">res_img</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">   </span><span style="color:#616E88;">//end of subtract</span></span>
<span class="line"><span style="color:#ECEFF4;">   </span><span style="color:#616E88;">//multiply</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">(%.1f%c%.1fi) * (%.1f%c%.1fi) = </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">a1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">add_1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">img_1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">add_2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">img_2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_real </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> a1</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;">b1</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_img </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> a2</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">b1</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">a1</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">res_output</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_real</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">res_img</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">   </span><span style="color:#616E88;">//end of multiply</span></span>
<span class="line"><span style="color:#ECEFF4;">   </span><span style="color:#616E88;">//divide</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">(%.1f%c%.1fi) / (%.1f%c%.1fi) = </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">a1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">add_1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">img_1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">add_2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">img_2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_real </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">a1</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">b1</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">/</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_img </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">b1</span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;">a1</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">/</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">a2</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">b2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#88C0D0;">res_output</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_real</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">res_img</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">   </span><span style="color:#616E88;">//end of divide</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">res_output</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">res_real</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">res_img</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> add_res </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">+</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_real </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">round</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_real</span><span style="color:#81A1C1;">*</span><span style="color:#B48EAD;">10</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">/</span><span style="color:#B48EAD;">10</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   res_img </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">round</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_img</span><span style="color:#81A1C1;">*</span><span style="color:#B48EAD;">10</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">/</span><span style="color:#B48EAD;">10</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_real </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&amp;&amp;</span><span style="color:#D8DEE9FF;"> res_img </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">0.0</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#81A1C1;">else</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_real </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0.00</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">         </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%.1lfi</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">res_img</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">else</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_img </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0.00</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">         </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%.1lf</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">res_real</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">else</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">         </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">res_img </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            res_img </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;">res_img</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            add_res </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">-</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">         </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">         </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%.1lf%c%.1lfi</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">res_real</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">add_res</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">res_img</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">   </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picb.waku.icu/picb/2024/05/14/202405141533835.png" alt="7-36 测试点"></p>`,21),e=[o];function c(r,t){return n(),a("div",null,e)}const F=s(p,[["render",c],["__file","7-36.html.vue"]]),y=JSON.parse('{"path":"/program/7-36.html","title":"7-36 复数四则运算","lang":"zh-CN","frontmatter":{"description":"7-36 复数四则运算 本题要求编写程序，计算2个复数的和、差、积、商。 输入格式 输入在一行中按照a1 b1 a2 b2的格式给出2个复数C1=a1+b1i和C2=a2+b2i的实部和虚部。题目保证C2不为0。 输出格式 分别在4行中按照(a1+b1i) 运算符 (a2+b2i) = 结果的格式顺序输出2个复数的和、差、积、商，数字精确到小数点后1位...","head":[["meta",{"property":"og:url","content":"https://mrright024.github.io//PTA_Problem_Sets_14/PTA_Problem_Sets_14/program/7-36.html"}],["meta",{"property":"og:site_name","content":"PTA Problem Sets 14"}],["meta",{"property":"og:title","content":"7-36 复数四则运算"}],["meta",{"property":"og:description","content":"7-36 复数四则运算 本题要求编写程序，计算2个复数的和、差、积、商。 输入格式 输入在一行中按照a1 b1 a2 b2的格式给出2个复数C1=a1+b1i和C2=a2+b2i的实部和虚部。题目保证C2不为0。 输出格式 分别在4行中按照(a1+b1i) 运算符 (a2+b2i) = 结果的格式顺序输出2个复数的和、差、积、商，数字精确到小数点后1位..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://picb.waku.icu/picb/2024/05/14/202405141533835.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-14T08:42:49.000Z"}],["meta",{"property":"article:author","content":"William Kong"}],["meta",{"property":"article:modified_time","content":"2024-05-14T08:42:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7-36 复数四则运算\\",\\"image\\":[\\"https://picb.waku.icu/picb/2024/05/14/202405141533835.png\\"],\\"dateModified\\":\\"2024-05-14T08:42:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"William Kong\\",\\"url\\":\\"https://williamkong.xyz\\",\\"email\\":\\"admin@williamkong.xyz\\"}]}"]]},"headers":[{"level":2,"title":"输入格式","slug":"输入格式","link":"#输入格式","children":[]},{"level":2,"title":"输出格式","slug":"输出格式","link":"#输出格式","children":[]},{"level":2,"title":"输入样例1","slug":"输入样例1","link":"#输入样例1","children":[]},{"level":2,"title":"输出样例1","slug":"输出样例1","link":"#输出样例1","children":[]},{"level":2,"title":"输入样例2","slug":"输入样例2","link":"#输入样例2","children":[]},{"level":2,"title":"输出样例2","slug":"输出样例2","link":"#输出样例2","children":[]},{"level":2,"title":"分析与答案","slug":"分析与答案","link":"#分析与答案","children":[]}],"git":{"updatedTime":1715676169000,"contributors":[{"name":"William Kong","email":"37934615+Mrright024@users.noreply.github.com","commits":3}]},"filePathRelative":"program/7-36.md","autoDesc":true}');export{F as comp,y as data};
