import{_ as s,o as n,c as a,b as l}from"./app-3s01Ete_.js";const p={},o=l(`<h1 id="_7-26-单词长度" tabindex="-1"><a class="header-anchor" href="#_7-26-单词长度"><span>7-26 单词长度</span></a></h1><p>你的程序要读入一行文本，其中以空格分隔为若干个单词，以<code>.</code>结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如<code>it&#39;s</code>算一个单词，长度为4。注意，行中可能出现连续的空格；最后的<code>.</code>不计算在内。</p><h2 id="输入格式" tabindex="-1"><a class="header-anchor" href="#输入格式"><span>输入格式</span></a></h2><p>输入在一行中给出一行文本，以<code>.</code>结束</p><p>**提示：**用<code>scanf(&quot;%c&quot;,...);</code>来读入一个字符，直到读到<code>.</code>为止。</p><h2 id="输出格式" tabindex="-1"><a class="header-anchor" href="#输出格式"><span>输出格式</span></a></h2><p>在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。</p><h2 id="输入样例" tabindex="-1"><a class="header-anchor" href="#输入样例"><span>输入样例</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#D8DEE9FF;">It</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">s great to see you here.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="输出样例" tabindex="-1"><a class="header-anchor" href="#输出样例"><span>输出样例</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#B48EAD;">4</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">5</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">3</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">3</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">4</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="分析与答案" tabindex="-1"><a class="header-anchor" href="#分析与答案"><span>分析与答案</span></a></h2><p>虽然涉及到字符串的题目一般会用<code>string.h</code>中的函数处理，但这道题我还是采用了单链表的方式（其实是因为我对<code>string.h</code>不熟），链表中记录的是各个单词的长度。</p><ol><li>当输入既不为空格也不为句号时，记录单词长度的变量<code>count</code>就+1；</li><li>当输入为空格时，如果此时<code>count</code>不为0，说明之前记录的单词长度还没有写进链表里，此时就要将变量写入链表并置零；如果这时<code>count</code>为0，说明之前已经有空格打断过了，那就什么都不做。</li><li>当输入为句号时，如果此时<code>count</code>不为0，说明之前记录的单词长度还没有写进链表里，此时就要将变量写入链表并置零，同时结束链表；如果这时<code>count</code>为0，说明句号前面有空格触发了置零（或者干脆什么都没有），此时将0写入链表并结束。在输出时，最后这个0不会被输出（题目并没有明说，但似乎没有单词的时候就是什么都不用输出的）</li></ol><p>链表结束后，从头开始遍历一遍输出单词长度，注意空格添加的条件。</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#8FBCBB;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">stdio.h</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#8FBCBB;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">stdlib.h</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">struct</span><span style="color:#D8DEE9FF;"> wordLen </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> len</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">struct</span><span style="color:#D8DEE9FF;"> wordLen </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">next</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">typedef</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">struct</span><span style="color:#D8DEE9FF;"> wordLen wordlen</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#ECEFF4;">(){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> count </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> c</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    wordlen </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">res</span><span style="color:#81A1C1;">=NULL</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">p</span><span style="color:#81A1C1;">=NULL;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    res </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">wordlen </span><span style="color:#81A1C1;">*</span><span style="color:#ECEFF4;">)</span><span style="color:#88C0D0;">malloc</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">sizeof</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">wordlen</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    p </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> res</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">while</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#88C0D0;">scanf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%c</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9FF;">c</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">c</span><span style="color:#81A1C1;">==</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">.</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">count </span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#ECEFF4;">                </span><span style="color:#616E88;">//句号前有最后一个单词</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#D8DEE9;">res</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">len</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> count</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                count </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#D8DEE9;">res</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">next</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">NULL;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">else</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#D8DEE9;">res</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">len</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#D8DEE9;">res</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">next</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">NULL;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">break;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">else</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">c</span><span style="color:#81A1C1;">==</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">count </span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#ECEFF4;">                    </span><span style="color:#616E88;">//空格前有计数，否则什么都不做</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                    </span><span style="color:#D8DEE9;">res</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">len</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> count</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                    </span><span style="color:#D8DEE9;">res</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">next</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">wordlen</span><span style="color:#81A1C1;">*</span><span style="color:#ECEFF4;">)</span><span style="color:#88C0D0;">malloc</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">sizeof</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">wordlen</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                    res </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">res</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">next</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                    count </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">else</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                count</span><span style="color:#81A1C1;">++;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">while</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">p</span><span style="color:#81A1C1;">!=NULL</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">len</span><span style="color:#81A1C1;">!=</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%d</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">p</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">len</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">next</span><span style="color:#81A1C1;">!=NULL&amp;&amp;</span><span style="color:#D8DEE9;">p</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">next</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">len</span><span style="color:#81A1C1;">!=</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;"> </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        p </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">p</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">next</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picb.waku.icu/picb/2024/05/13/202405132121434.png" alt="7-26 测试点"></p>`,17),e=[o];function c(t,r){return n(),a("div",null,e)}const i=s(p,[["render",c],["__file","7-26.html.vue"]]),y=JSON.parse(`{"path":"/program/7-26.html","title":"7-26 单词长度","lang":"zh-CN","frontmatter":{"description":"7-26 单词长度 你的程序要读入一行文本，其中以空格分隔为若干个单词，以.结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如it's算一个单词，长度为4。注意，行中可能出现连续的空格；最后的.不计算在内。 输入格式 输入在一行中给出一行文本，以.结束 **提示：**用scanf(\\"%c\\",...);来读入一个字符，直到读到.为...","head":[["meta",{"property":"og:url","content":"https://mrright024.github.io//PTA_Problem_Sets_14/PTA_Problem_Sets_14/program/7-26.html"}],["meta",{"property":"og:site_name","content":"PTA Problem Sets 14"}],["meta",{"property":"og:title","content":"7-26 单词长度"}],["meta",{"property":"og:description","content":"7-26 单词长度 你的程序要读入一行文本，其中以空格分隔为若干个单词，以.结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如it's算一个单词，长度为4。注意，行中可能出现连续的空格；最后的.不计算在内。 输入格式 输入在一行中给出一行文本，以.结束 **提示：**用scanf(\\"%c\\",...);来读入一个字符，直到读到.为..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://picb.waku.icu/picb/2024/05/13/202405132121434.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-13T13:29:58.000Z"}],["meta",{"property":"article:author","content":"William Kong"}],["meta",{"property":"article:modified_time","content":"2024-05-13T13:29:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7-26 单词长度\\",\\"image\\":[\\"https://picb.waku.icu/picb/2024/05/13/202405132121434.png\\"],\\"dateModified\\":\\"2024-05-13T13:29:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"William Kong\\",\\"url\\":\\"https://williamkong.xyz\\",\\"email\\":\\"admin@williamkong.xyz\\"}]}"]]},"headers":[{"level":2,"title":"输入格式","slug":"输入格式","link":"#输入格式","children":[]},{"level":2,"title":"输出格式","slug":"输出格式","link":"#输出格式","children":[]},{"level":2,"title":"输入样例","slug":"输入样例","link":"#输入样例","children":[]},{"level":2,"title":"输出样例","slug":"输出样例","link":"#输出样例","children":[]},{"level":2,"title":"分析与答案","slug":"分析与答案","link":"#分析与答案","children":[]}],"git":{"updatedTime":1715606998000,"contributors":[{"name":"William Kong","email":"37934615+Mrright024@users.noreply.github.com","commits":3}]},"filePathRelative":"program/7-26.md","autoDesc":true}`);export{i as comp,y as data};
