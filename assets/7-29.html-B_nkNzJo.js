import{_ as s,o as n,c as a,b as l}from"./app-3s01Ete_.js";const e={},p=l(`<h1 id="_7-29-删除字符串中的子串" tabindex="-1"><a class="header-anchor" href="#_7-29-删除字符串中的子串"><span>7-29 删除字符串中的子串</span></a></h1><p>输入2个字符串S1和S2，要求删除字符串S1中出现的所有子串S2，即结果字符串中不能包含S2。</p><h2 id="输入格式" tabindex="-1"><a class="header-anchor" href="#输入格式"><span>输入格式</span></a></h2><p>输入在2行中分别给出不超过80个字符长度的、以回车结束的2个非空字符串，对应S1和S2。</p><h2 id="输出格式" tabindex="-1"><a class="header-anchor" href="#输出格式"><span>输出格式</span></a></h2><p>在一行中输出删除字符串S1中出现的所有子串S2后的结果字符串。</p><h2 id="输入样例" tabindex="-1"><a class="header-anchor" href="#输入样例"><span>输入样例</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#D8DEE9FF;">Tomcat is a male ccatat</span></span>
<span class="line"><span style="color:#D8DEE9FF;">cat</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="输出样例" tabindex="-1"><a class="header-anchor" href="#输出样例"><span>输出样例</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#D8DEE9FF;">Tom is a male </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="分析与答案" tabindex="-1"><a class="header-anchor" href="#分析与答案"><span>分析与答案</span></a></h2><p>需要动用到<code>string.h</code>的一道题，用两个数组<code>s1[81]</code>和<code>s2[81]</code>来储存字符串和子串，然后用<code>strstr</code>函数找到第一次出现子串的位置，将该位置的子串之后的字符先复制，然后将该位置后的内容删除（其实也就是将指针所指的位置内容改为结束符<code>\\0</code>），再将之前复制的字符连接到字符串里。重复上述动作，直到<code>strstr</code>范围<code>NULL</code>值。</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#8FBCBB;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">stdio.h</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#8FBCBB;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">string.h</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#ECEFF4;">(){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> s1</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">81</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">{</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#EBCB8B;">\\0</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">},</span><span style="color:#D8DEE9FF;">s2</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">81</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">{</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#EBCB8B;">\\0</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">},</span><span style="color:#D8DEE9FF;">tmp</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">81</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">{</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#EBCB8B;">\\0</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#88C0D0;">gets</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">s1</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#88C0D0;">gets</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">s2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">p </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">strstr</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">s1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">s2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">while</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">p</span><span style="color:#81A1C1;">!=NULL</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#88C0D0;">strcpy</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">tmp</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">p</span><span style="color:#81A1C1;">+</span><span style="color:#88C0D0;">strlen</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">s2</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">p </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#EBCB8B;">\\0</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#88C0D0;">strcat</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">s1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">tmp</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        p </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">strstr</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">s1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">s2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%s</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">s1</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picb.waku.icu/picb/2024/05/13/202405132221083.png" alt="7-29 测试点"></p>`,14),o=[p];function t(c,r){return n(),a("div",null,o)}const E=s(e,[["render",t],["__file","7-29.html.vue"]]),F=JSON.parse('{"path":"/program/7-29.html","title":"7-29 删除字符串中的子串","lang":"zh-CN","frontmatter":{"description":"7-29 删除字符串中的子串 输入2个字符串S1和S2，要求删除字符串S1中出现的所有子串S2，即结果字符串中不能包含S2。 输入格式 输入在2行中分别给出不超过80个字符长度的、以回车结束的2个非空字符串，对应S1和S2。 输出格式 在一行中输出删除字符串S1中出现的所有子串S2后的结果字符串。 输入样例 输出样例 分析与答案 需要动用到string...","head":[["meta",{"property":"og:url","content":"https://mrright024.github.io//PTA_Problem_Sets_14/PTA_Problem_Sets_14/program/7-29.html"}],["meta",{"property":"og:site_name","content":"PTA Problem Sets 14"}],["meta",{"property":"og:title","content":"7-29 删除字符串中的子串"}],["meta",{"property":"og:description","content":"7-29 删除字符串中的子串 输入2个字符串S1和S2，要求删除字符串S1中出现的所有子串S2，即结果字符串中不能包含S2。 输入格式 输入在2行中分别给出不超过80个字符长度的、以回车结束的2个非空字符串，对应S1和S2。 输出格式 在一行中输出删除字符串S1中出现的所有子串S2后的结果字符串。 输入样例 输出样例 分析与答案 需要动用到string..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://picb.waku.icu/picb/2024/05/13/202405132221083.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-13T14:31:40.000Z"}],["meta",{"property":"article:author","content":"William Kong"}],["meta",{"property":"article:modified_time","content":"2024-05-13T14:31:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7-29 删除字符串中的子串\\",\\"image\\":[\\"https://picb.waku.icu/picb/2024/05/13/202405132221083.png\\"],\\"dateModified\\":\\"2024-05-13T14:31:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"William Kong\\",\\"url\\":\\"https://williamkong.xyz\\",\\"email\\":\\"admin@williamkong.xyz\\"}]}"]]},"headers":[{"level":2,"title":"输入格式","slug":"输入格式","link":"#输入格式","children":[]},{"level":2,"title":"输出格式","slug":"输出格式","link":"#输出格式","children":[]},{"level":2,"title":"输入样例","slug":"输入样例","link":"#输入样例","children":[]},{"level":2,"title":"输出样例","slug":"输出样例","link":"#输出样例","children":[]},{"level":2,"title":"分析与答案","slug":"分析与答案","link":"#分析与答案","children":[]}],"git":{"updatedTime":1715610700000,"contributors":[{"name":"William Kong","email":"37934615+Mrright024@users.noreply.github.com","commits":3}]},"filePathRelative":"program/7-29.md","autoDesc":true}');export{E as comp,F as data};
