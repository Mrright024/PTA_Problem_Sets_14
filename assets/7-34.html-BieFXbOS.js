import{_ as o,o as a,c as l,a as s,d as n,b as p}from"./app-3s01Ete_.js";const e={},t=s("h1",{id:"_7-34-通讯录的录入与显示",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_7-34-通讯录的录入与显示"},[s("span",null,"7-34 通讯录的录入与显示")])],-1),c={class:"MathJax",jax:"SVG",style:{position:"relative"}},r={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"},i=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})])])],-1),E=[i],F=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"N")])],-1),y=s("h2",{id:"输入格式",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#输入格式"},[s("span",null,"输入格式")])],-1),d={class:"MathJax",jax:"SVG",style:{position:"relative"}},D={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"},C=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})])])],-1),Q=[C],m=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"N")])],-1),h={class:"MathJax",jax:"SVG",style:{position:"relative"}},u={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"},A=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})])])],-1),v=[A],g=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"N")])],-1),_=s("code",null,"姓名 生日 性别 固话 手机",-1),b=s("code",null,"姓名",-1),T=s("code",null,"yyyy/mm/dd",-1),x=s("code",null,"M",-1),w=s("code",null,"F",-1),B=s("code",null,"固话",-1),f=s("code",null,"手机",-1),L=s("code",null,"+",-1),k={class:"MathJax",jax:"SVG",style:{position:"relative"}},M={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.011ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 889 683","aria-hidden":"true"},H=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"})])])],-1),j=[H],q=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"K")])],-1),N={class:"MathJax",jax:"SVG",style:{position:"relative"}},S={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.011ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 889 683","aria-hidden":"true"},V=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"})])])],-1),Z=[V],P=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"K")])],-1),J={class:"MathJax",jax:"SVG",style:{position:"relative"}},z={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"},G=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})])])],-1),K=[G],W=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"N")])],-1),O=p(`<h2 id="输出格式" tabindex="-1"><a class="header-anchor" href="#输出格式"><span>输出格式</span></a></h2><p>对每一条要查询的记录编号，在一行中按照<code>姓名 固话 手机 性别 生日</code>的格式输出该记录。若要查询的记录不存在，则输出<code>Not Found</code>。</p><h2 id="输入样例" tabindex="-1"><a class="header-anchor" href="#输入样例"><span>输入样例</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#B48EAD;">3</span></span>
<span class="line"><span style="color:#D8DEE9FF;">Chris </span><span style="color:#B48EAD;">1984</span><span style="color:#81A1C1;">/0</span><span style="color:#B48EAD;">3</span><span style="color:#81A1C1;">/</span><span style="color:#B48EAD;">10</span><span style="color:#D8DEE9FF;"> F </span><span style="color:#81A1C1;">+</span><span style="color:#B48EAD;">86181779452</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">13707010007</span></span>
<span class="line"><span style="color:#D8DEE9FF;">LaoLao </span><span style="color:#B48EAD;">1967</span><span style="color:#81A1C1;">/</span><span style="color:#B48EAD;">11</span><span style="color:#81A1C1;">/</span><span style="color:#B48EAD;">30</span><span style="color:#D8DEE9FF;"> F </span><span style="color:#B48EAD;">057187951100</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#B48EAD;">8618618623333</span></span>
<span class="line"><span style="color:#D8DEE9FF;">QiaoLin </span><span style="color:#B48EAD;">1980</span><span style="color:#81A1C1;">/0</span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">/0</span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> M </span><span style="color:#B48EAD;">84172333</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">10086</span></span>
<span class="line"><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">7</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="输出样例" tabindex="-1"><a class="header-anchor" href="#输出样例"><span>输出样例</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#D8DEE9FF;">LaoLao </span><span style="color:#B48EAD;">057187951100</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#B48EAD;">8618618623333</span><span style="color:#D8DEE9FF;"> F </span><span style="color:#B48EAD;">1967</span><span style="color:#81A1C1;">/</span><span style="color:#B48EAD;">11</span><span style="color:#81A1C1;">/</span><span style="color:#B48EAD;">30</span></span>
<span class="line"><span style="color:#D8DEE9FF;">Not Found</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分析与答案" tabindex="-1"><a class="header-anchor" href="#分析与答案"><span>分析与答案</span></a></h2><p>用一个动态分配内存的结构体数组来储存通讯录记录，每一项都作为字符串（或字符，性别只有一个字母）来处理。注意输入和输出的次序是不一样的。</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#8FBCBB;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">stdio.h</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#8FBCBB;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">stdlib.h</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#8FBCBB;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">string.h</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">typedef</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">struct</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> name</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">11</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> birth</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">11</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> sex</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> tele</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">17</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">char</span><span style="color:#D8DEE9FF;"> mobile</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">17</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;">    </span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">contact</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#ECEFF4;">(){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> n</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#88C0D0;">scanf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%d</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9FF;">n</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    contact </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> list </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">contact</span><span style="color:#81A1C1;">*</span><span style="color:#ECEFF4;">)</span><span style="color:#88C0D0;">malloc</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n</span><span style="color:#81A1C1;">*sizeof</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">contact</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">for</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;">n</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#88C0D0;">scanf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%s %s %c %s %s</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">name</span><span style="color:#ECEFF4;">,(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">birth</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">sex</span><span style="color:#ECEFF4;">,(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">tele</span><span style="color:#ECEFF4;">,(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">mobile</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> num</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> lookup</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#88C0D0;">scanf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%d</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9FF;">num</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    lookup </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int*</span><span style="color:#ECEFF4;">)</span><span style="color:#88C0D0;">malloc</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">num</span><span style="color:#81A1C1;">*sizeof</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">for</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">=</span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;">num</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#88C0D0;">scanf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%d</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;">lookup</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">for</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">=</span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;">num</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">*</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lookup</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">&gt;=</span><span style="color:#D8DEE9FF;">n</span><span style="color:#81A1C1;">||*</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lookup</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">&lt;</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Not Found</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">else</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">%s %s %s %c %s</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+*</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lookup</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">name</span><span style="color:#ECEFF4;">,(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+*</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lookup</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">tele</span><span style="color:#ECEFF4;">,(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+*</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lookup</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">mobile</span><span style="color:#ECEFF4;">,(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+*</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lookup</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">sex</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">list</span><span style="color:#81A1C1;">+*</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lookup</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9;">birth</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">if</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;">num</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#88C0D0;">printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picb.waku.icu/picb/2024/05/14/202405141510603.png" alt="7-34 测试点"></p>`,10);function R(I,U){return a(),l("div",null,[t,s("p",null,[n("通讯录中的一条记录包含下述基本信息：朋友的姓名、出生日期、性别、固定电话号码、移动电话号码。 本题要求编写程序，录入"),s("mjx-container",c,[(a(),l("svg",r,E)),F]),n("条记录，并且根据要求显示任意某条记录。")]),y,s("p",null,[n("输入在第一行给出正整数"),s("mjx-container",d,[(a(),l("svg",D,Q)),m]),n("（≤10）；随后"),s("mjx-container",h,[(a(),l("svg",u,v)),g]),n("行，每行按照格式"),_,n("给出一条记录。其中"),b,n("是不超过10个字符、不包含空格的非空字符串；生日按"),T,n("的格式给出年月日；性别用"),x,n("表示“男”、"),w,n("表示“女”；"),B,n("和"),f,n("均为不超过15位的连续数字，前面有可能出现"),L,n("。")]),s("p",null,[n("在通讯录记录输入完成后，最后一行给出正整数"),s("mjx-container",k,[(a(),l("svg",M,j)),q]),n("，并且随后给出"),s("mjx-container",N,[(a(),l("svg",S,Z)),P]),n("个整数，表示要查询的记录编号（从0到"),s("mjx-container",J,[(a(),l("svg",z,K)),W]),n("−1顺序编号）。数字间以空格分隔。")]),O])}const Y=o(e,[["render",R],["__file","7-34.html.vue"]]),$=JSON.parse('{"path":"/program/7-34.html","title":"7-34 通讯录的录入与显示","lang":"zh-CN","frontmatter":{"description":"7-34 通讯录的录入与显示 通讯录中的一条记录包含下述基本信息：朋友的姓名、出生日期、性别、固定电话号码、移动电话号码。 本题要求编写程序，录入条记录，并且根据要求显示任意某条记录。 输入格式 输入在第一行给出正整数（≤10）；随后行，每行按照格式姓名 生日 性别 固话 手机给出一条记录。其中姓名是不超过10个字符、不包含空格的非空字符串；生日按yy...","head":[["meta",{"property":"og:url","content":"https://mrright024.github.io//PTA_Problem_Sets_14/PTA_Problem_Sets_14/program/7-34.html"}],["meta",{"property":"og:site_name","content":"PTA Problem Sets 14"}],["meta",{"property":"og:title","content":"7-34 通讯录的录入与显示"}],["meta",{"property":"og:description","content":"7-34 通讯录的录入与显示 通讯录中的一条记录包含下述基本信息：朋友的姓名、出生日期、性别、固定电话号码、移动电话号码。 本题要求编写程序，录入条记录，并且根据要求显示任意某条记录。 输入格式 输入在第一行给出正整数（≤10）；随后行，每行按照格式姓名 生日 性别 固话 手机给出一条记录。其中姓名是不超过10个字符、不包含空格的非空字符串；生日按yy..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://picb.waku.icu/picb/2024/05/14/202405141510603.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-14T08:42:49.000Z"}],["meta",{"property":"article:author","content":"William Kong"}],["meta",{"property":"article:modified_time","content":"2024-05-14T08:42:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7-34 通讯录的录入与显示\\",\\"image\\":[\\"https://picb.waku.icu/picb/2024/05/14/202405141510603.png\\"],\\"dateModified\\":\\"2024-05-14T08:42:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"William Kong\\",\\"url\\":\\"https://williamkong.xyz\\",\\"email\\":\\"admin@williamkong.xyz\\"}]}"]]},"headers":[{"level":2,"title":"输入格式","slug":"输入格式","link":"#输入格式","children":[]},{"level":2,"title":"输出格式","slug":"输出格式","link":"#输出格式","children":[]},{"level":2,"title":"输入样例","slug":"输入样例","link":"#输入样例","children":[]},{"level":2,"title":"输出样例","slug":"输出样例","link":"#输出样例","children":[]},{"level":2,"title":"分析与答案","slug":"分析与答案","link":"#分析与答案","children":[]}],"git":{"updatedTime":1715676169000,"contributors":[{"name":"William Kong","email":"37934615+Mrright024@users.noreply.github.com","commits":3}]},"filePathRelative":"program/7-34.md","autoDesc":true}');export{Y as comp,$ as data};
